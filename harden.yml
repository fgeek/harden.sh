---
- hosts: localhost
  vars_files:
    - vars.yml
  tasks:
    #- include: tasks/sudoers.yml
    - include: tasks/lynis.yml
    - include: tasks/filesystem.yml
    - include: tasks/ca-certs.yml
    - include: tasks/debian_packages.yml
    - include: tasks/audit.yml
    - include: tasks/login_defs.yml
    - include: tasks/pam.yml
    - include: tasks/services.yml
    - include: tasks/sysctl.yml
    - include: tasks/services-accounting.yml
    - include: tasks/apparmor.yml
    - include: tasks/logging.yml
    - include: tasks/misc.yml
    - include: tasks/banners.yml
    - include: tasks/network.yml
    - include: tasks/entropy.yml
    #- include: tasks/aide.yml
    #- include: tasks/rkhunter.yml
    #- include: tasks/clamav.yml
    #- include: tasks/display_managers.yml

  handlers:
    - name: Run update-ca-certificates
      become: yes
      when: ansible_os_family != "RedHat"
      command: /usr/sbin/update-ca-certificates --verbose --fresh
      tags:
      - configuration
      - pki
    - name: Load sysctl settings
      become: yes
      command: /sbin/sysctl -p /etc/sysctl.d/sysctl.conf /etc/sysctl.d/network.conf
      tags: kernel
      ignore_errors: yes
      #register: result
      #failed_when:
      #  - result.failed
      #  - "result.stderr != 'sysctl: cannot stat /proc/sys/sys/kernel/modify_ldt: No such file or directory'"
    - name: Create rkhunter.dat
      command: /usr/bin/rkhunter --propupd
      become: yes
      tags: rkhunter
    # This takes a long time so we do it async
    - name: Create aide.db
      command: /usr/sbin/aideinit --yes --force
      tags: aide
      become: yes
      async: 3600
      poll: 0
      when: ansible_distribution == "Debian" or ansible_distribution == "Kali GNU/Linux"
    - name: Run pam-auth-update
      command: /usr/sbin/pam-auth-update --package
      become: yes
      tags:
      - pam
      - configuration
      when: ansible_distribution == "Debian" or ansible_distribution == "Kali GNU/Linux"
    # rc.sshd exits if /var/run/sshd.pid doesn't exist
    - name: Restart sshd (Slackware)
      when: ansible_distribution == "Slackware"
      become: yes
      command: /bin/sh /etc/rc.d/rc.sshd restart
      register: result
      failed_when:
        - result.failed == true
        - '"WARNING: There does not appear to be a parent instance of sshd running." not in result.stdout'
      tags:
      - services
      - slackware
    - name: Restart sshd (Debian)
      become: yes
      service:
        name: ssh
        state: restarted
      when: >
        (ansible_distribution == "Debian" or ansible_distribution == "Kali GNU/Linux") and
        ansible_facts.services.ssh.state == "running"
      tags: services
