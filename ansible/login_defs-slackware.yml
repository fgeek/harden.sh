---
- name: Slackware authorization
  block:
  # The login ACL following this task will actually start blocking access, so
  # check that we are not locking ourselves out of the system being hardened.
  - name: 'Check that some user(s) exist in "{{ allowed_group }}" group'
    getent:
      database: group
      key: "{{ allowed_group }}"
    failed_when: getent_group.{{ allowed_group }}[2] == ""
  - name: /etc/shutdown.allow
    block:
    - name: Create /etc/shutdown.allow
      copy:
        content: ""
        dest: /etc/shutdown.allow
        force: no
    - name: Use shutdown -a in /etc/inittab
      replace:
        path: /etc/inittab
        regexp: '^(ca::ctrlaltdel:/sbin/shutdown -t5 -r now)$'
        replace: '\g<1> -a'
        validate: '/bin/grep "^ca::ctrlaltdel:/sbin/shutdown -t5 -r now -a$" %s'
  become: yes
  when: ansible_distribution == "Slackware"
- name: Set umask to 077 in /etc/profile (Slackware)
  become: yes
  when: ansible_distribution == "Slackware"
  replace:
    path: /etc/profile
    regexp: '^(umask) [0-9]+$'
    replace: '\g<1> 077'
    validate: '/bin/grep "^umask 077$" %s'
- name: Set defchmod to 700 in /usr/sbin/adduser (Slackware)
  become: yes
  when: ansible_distribution == "Slackware"
  replace:
    path: /usr/sbin/adduser
    regexp: '^(defchmod)=[0-9]+.*'
    replace: '\g<1>=700 # home dir permissions'
    validate: '/bin/grep "^defchmod=700 # home dir permissions$" %s'
- name: Single user mode authentication
  block:
  - name: Remove S from System initialization (Slackware)
    replace:
      path: /etc/inittab
      regexp: '^si:S:sysinit:/etc/rc.d/rc.S$'
      replace: 'si::sysinit:/etc/rc.d/rc.S'
      validate: '/bin/grep "^si::sysinit:/etc/rc.d/rc.S$" %s'
  - name: Create separate entry for single user mode which requires authentication (Slackware)
    blockinfile:
      path: /etc/inittab
      insertafter: "^x1:4:respawn:/etc/rc.d/rc.4$"
      block: |
        # single user mode
        ~~:S:wait:/sbin/sulogin
  - name: Fix rc.K
    lineinfile:
      path: /etc/rc.d/rc.K
      regexp: '^/sbin/telinit'
      line: /sbin/telinit -t 1 S
  become: yes
  when: ansible_distribution == "Slackware"
- name: Add LESS variables and disable core dumps
  blockinfile:
    path: /etc/profile
    block: |
      export LESSSECURE=1
      export LESSHISTFILE="/dev/null"
      ulimit -Hc 0
  become: yes
  when: ansible_distribution == "Slackware"
# https://github.com/ansible/ansible/issues/11024
- name: Remove daemon from adm group (Slackware)
  when: ansible_distribution == "Slackware"
  become: yes
  command: gpasswd -d daemon adm
  register: result
  failed_when:
    - result.failed == true
    - '"is not a member of" not in result.stderr'
- name: Fix gshadow (Slackware)
  when: ansible_distribution == "Slackware"
  ignore_errors: yes
  become: yes
  shell: yes | grpck
- name: Lock system accounts
  block:
    - name: getent passwd
      getent:
        database: passwd
    - name: Lock system accounts
      user:
        name: '{{ item.key }}'
        shell: /sbin/nologin
        expires: '{{ 60 * 60 * 24 }}'
        password_lock: yes
      when: item.value[1] | int < 1000 and item.value[1] != "0"
      with_dict: "{{ getent_passwd }}"
  when: ansible_distribution == "Slackware"
  become: yes
- name: Deny use of su
  copy:
    src: "{{ playbook_dir }}/../newconfs/pam.d/su.new"
    dest: /etc/pam.d/su
    owner: root
    group: root
    mode: '0644'
  when: ansible_distribution == "Slackware"
  become: yes
