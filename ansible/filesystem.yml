---
- name: Slackware hidepid=2
  block:
  - name: getent group polkitd
    getent:
      database: group
      key: polkitd
  - name: Mount /proc with hidepid=2 (Slackware)
    lineinfile:
      path: /etc/rc.d/rc.S
      state: present
      insertafter: '/sbin/mount -v proc /proc -n -t proc 2> /dev/null$'
      regexp: '^/sbin/mount -o remount,hidepid=2,gid={{ getent_group.polkitd[1] }} /proc$'
      line: '/sbin/mount -o remount,hidepid=2,gid={{ getent_group.polkitd[1] }} /proc'
  become: yes
  when: ansible_distribution == "Slackware"
- name: Remount /proc with hidepid=2
  become: yes
  mount:
    path: /proc
    opts: hidepid=2
    state: mounted
    src: proc
    fstype: proc
- name: Create /etc/fstab.new
  block:
  - name: Create temp file
    tempfile:
      state: file
      suffix: temp
    register: tempfile_1
  - name: Copy fstab.awk
    become: yes
    copy:
      src: "{{ playbook_dir }}/../libexec/fstab.awk"
      dest: "{{ tempfile_1.path }}"
  - name: Install Gawk
    become: yes
    when: ansible_distribution == "Debian" or ansible_distribution == "Kali GNU/Linux"
    apt:
      name: gawk
      update_cache: yes
  - name: Create /etc/fstab.new
    become: yes
    shell: gawk -f {{ tempfile_1.path }} /etc/fstab 1>/etc/fstab.new
  - name: Remove temp file
    file:
      path: "{{ tempfile_1.path }}"
      state: absent
- name: Clean up /tmp during boot (Slackware)
  become: yes
  when: ansible_distribution == "Slackware"
  replace:
    path: /etc/rc.d/rc.S
    regexp: '^(rm -rf) /tmp/\{.*\}$'
    replace: '\g<1> /tmp/*'
    validate: '/bin/grep "^rm -rf /tmp/\*$" %s'
- name: Chmod sensitive files
  block:
  - include: filesystem-sudoers.yml
  - name: Kerberos keytab
    file:
      path: /etc/krb5.keytab
      mode: '0600'
      owner: root
      group: root
    register: result
    failed_when:
      - result.failed == true
      - result.state != "absent"
  - name: Install acl (Slackware)
    when: ansible_distribution == "Slackware"
    slackpkg:
      name: acl
      state: present
  # we don't want to mess with the group ownerships because these might be needed to be writable by utmp group
  - name: Grant group adm read rights on login records
    acl:
      path: "{{ item }}"
      entity: adm
      etype: group
      permissions: r
      state: present
    with_items:
      - /var/log/lastlog
      - /var/log/btmp
      - /var/log/wtmp
  - name: LDAP secrets
    file:
      path: "{{ item }}"
      mode: '0600'
      owner: root
      group: root
    with_items:
      # nss_ldap(5)
      - /etc/ldap.secret
      - /etc/libnss-ldap.secret
      # pam_ldap(5)
      - /etc/pam_ldap.secret
      - /etc/nslcd.conf
    register: result
    failed_when:
      - result.failed == true
      - result.state != "absent"
  - name: /etc/ssl/private
    file:
      path: /etc/ssl/private
      mode: o-rwx
      owner: root
  - name: /root
    file:
      path: /root
      mode: '0700'
      owner: root
      group: root
  # Stuff that is usually readable, but have no reason why they should be
  - name: chmod /etc/ssh/sshd_config
    file:
      path: /etc/ssh/sshd_config
      mode: '0600'
      owner: root
      group: root
    register: result
    failed_when:
      - result.failed == true
      - result.state != "absent"
  - name: chmod boot loader configurations
    file:
      path: "{{ item }}"
      mode: o-rwx
    with_items:
      - /etc/grub.d
      - /boot/grub/grub.cfg
      - /etc/default/grub
      - /etc/lilo.conf
    register: result
    failed_when:
      - result.failed == true
      - result.state != "absent"
  - name: chmod /etc/modprobe.d
    file:
      path: /etc/modprobe.d
      mode: '0700'
      owner: root
      group: root
  - name: chmod sysctl configurations
    file:
      path: "{{ item }}"
      mode: o-rwx
    with_items:
      - /etc/sysctl.conf
      - /etc/sysctl.d
    register: result
    failed_when:
      - result.failed == true
      - result.state != "absent"
  - name: chmod /etc/rc.d
    file:
      path: /etc/rc.d
      mode: '0700'
      owner: root
      group: root
    when: ansible_distribution == "Slackware"
  - name: Restrict visibility to /etc/cron.{d,hourly,daily,weekly,monthly}/
    file:
      path: /etc/{{ item }}
      mode: '0700'
    with_items:
      - cron.d
      - cron.hourly
      - cron.daily
      - cron.weekly
      - cron.monthly
  - name: /var/log/lastlog
    file:
      path: /var/log/lastlog
      mode: o-rwx
  - name: /var/log/wtmp
    file:
      path: /var/log/wtmp
      mode: '0660'
      owner: root
      group: utmp
  - name: /var/log
    file:
      path: /var/log
      # apps that have own accounts & directories under /var/log need the x-bit (like freerad in Debian)
      mode: '0751'
      owner: root
      group: adm
  - name: Slackware pkgtools & sbopkg
    when: ansible_distribution == "Slackware"
    file:
      path: "{{ item }}"
      mode: '0750'
      owner: root
      group: adm
    with_items:
      - /var/log/pkgtools
      - /var/lib/pkgtools
      - /var/log/sbopkg
    register: result
    failed_when:
      - result.failed == true
      - result.state != "absent"
  # bzgrep 'var/log/.\+/$' MANIFEST.bz2
  - name: Slackware log dirs
    when: ansible_distribution == "Slackware"
    file:
      path: /var/log/{{ item }}
      mode: '0750'
      owner: root
      group: adm
    with_items:
      - httpd
      - nfsd
      - cups
      - samba
      - sa
      - iptraf-ng
    register: result
    failed_when:
      - result.failed == true
      - result.state != "absent"
  - name: Slackware log dirs not owned by root
    when: ansible_distribution == "Slackware"
    file:
      path: /var/log/{{ item }}
      mode: o-rwx
    with_items:
      - icecream
      - uucp
    register: result
    failed_when:
      - result.failed == true
      - result.state != "absent"
  become: yes
