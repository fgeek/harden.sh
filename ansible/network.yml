---

# TCP wrappers
- name: Install TCP wrappers library and iptables-persistent (Debian)
  when: ansible_distribution == "Debian" or ansible_distribution == "Kali GNU/Linux"
  become: yes
  apt:
    update_cache: yes
    pkg:
    - libwrap0
    - iptables-persistent
  tags:
  - packages
  - network
  - firewall
  - services
- name: 'TCP wrappers: create /etc/hosts.allow'
  become: yes
  template:
    src: "{{ playbook_dir }}/templates/hosts.allow.j2"
    dest: /etc/hosts.allow
  tags: network
- name: 'TCP wrappers: create /etc/hosts.deny'
  become: yes
  copy:
    src: "{{ playbook_dir }}/../newconfs/hosts.deny.new"
    dest: /etc/hosts.deny
  tags: network
# </TCP wrappers>

# Slackware firewall
- name: Stat /etc/rc.d/rc.firewall (Slackware)
  stat:
    path: /etc/rc.d/rc.firewall
  register: stat_result
  become: yes
  when: ansible_distribution == "Slackware"
  tags:
  - network
  - firewall
- name: Firewall for Slackware
  tags:
  - network
  - firewall
  block:
  - name: Install iptables (Slackware)
    command: slackpkg -batch=on -default_answer=y install {{ item }}
    with_items:
      - iptables
      - libpcap
      - libnl3
      - dbus
    tags:
    - packages
  - name: Create /etc/rc.d/rc.firewall (Slackware)
    template:
      src: "{{ playbook_dir }}/templates/rc.firewall.j2"
      dest: /etc/rc.d/rc.firewall
      mode: '0700'
    tags: services
  - name: Start Slackware firewall
    command: /etc/rc.d/rc.firewall start
    tags: services
  become: yes
  when: ansible_distribution == "Slackware" and stat_result.stat.exists == False
- name: Enable Slackware firewall
  when: ansible_distribution == "Slackware" and stat_result.stat.exists == True and stat_result.stat.xusr == False
  file:
    path: /etc/rc.d/rc.firewall
    mode: '0700'
    owner: root
    group: root
  tags:
  - services
  - permissions
  - network
  - firewall
# </Slackware firewall>

# Debian firewall
- name: Stat /etc/iptables/rules.v4 (Debian)
  stat:
    path: /etc/iptables/rules.v4
  register: stat_result
  become: yes
  tags: firewall
- name: Firewall rules for Debian
  tags:
  - firewall
  - network
  block:
  - name: Create temp file
    tempfile:
      state: file
      suffix: temp
    register: tempfile_1
  - name: Copy firewall script
    template:
      src: "{{ playbook_dir }}/templates/rc.firewall.j2"
      dest: "{{ tempfile_1.path }}"
      mode: '0700'
  - name: Run firewall script
    command: /bin/bash {{ tempfile_1.path }} start
  - name: Remove temp file
    when: ansible_distribution == "Debian" or ansible_distribution == "Kali GNU/Linux"
    file:
      path: "{{ tempfile_1.path }}"
      state: absent
  - name: Create /etc/iptables/rules.v4
    shell: /sbin/iptables-save 1>/etc/iptables/rules.v4
  - name: Create /etc/iptables/rules.v6
    shell: /sbin/ip6tables-save 1>/etc/iptables/rules.v6
  become: yes
  # don't touch the firewall if rules.v4 already exists
  when: (ansible_distribution == "Debian" or ansible_distribution == "Kali GNU/Linux") and stat_result.stat.exists == False
- name: Final touches for Debian firewall
  block:
  - name: Enable netfilter-persistent
    systemd:
      name: netfilter-persistent
      state: started
      enabled: yes
    tags:
    - services
    - network
    - firewall
  - name: Chmod /etc/iptables
    file:
      path: /etc/iptables
      mode: '0700'
      owner: root
      group: root
    tags:
    - permissions
    - firewall
  become: yes
  when: ansible_distribution == "Debian" or ansible_distribution == "Kali GNU/Linux"
# </Debian firewall>
